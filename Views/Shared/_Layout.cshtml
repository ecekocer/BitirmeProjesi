<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BitirmeProjesi</title>
    <!-- Material Design Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.0/mdb.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BitirmeProjesi.styles.css" asp-append-version="true" />
    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="holographic-bg">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand holographic-text" href="/">
                <i class="fas fa-leaf me-2"></i>
                EcoTrack
            </a>
            <button class="navbar-toggler" type="button" data-mdb-toggle="collapse" data-mdb-target="#navbarNav">
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")" href="/">
                            <i class="fas fa-home me-2"></i>Ana Sayfa
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Create" ? "active" : "")" href="/PollutionEntry/Create">
                            <i class="fas fa-plus-circle me-2"></i>Veri Girişi
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Statistics" ? "active" : "")" href="/PollutionEntry/Statistics">
                            <i class="fas fa-chart-bar me-2"></i>İstatistikler
                        </a>
                    </li>
                    <li class="nav-item">
                        <button class="panel-toggle nav-link">
                            <i class="fas fa-cog"></i>
                        </button>
                    </li>
                </ul>
                <ul class="navbar-nav ms-auto">
                    @if (User.Identity?.IsAuthenticated == true)
                    {
                        <li class="nav-item">
                            <a class="nav-link nav-auth-link" asp-controller="Account" asp-action="Logout">
                                <i class="fas fa-sign-out-alt me-2"></i>Çıkış Yap
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link nav-auth-link" asp-controller="Account" asp-action="Login">
                                <i class="fas fa-sign-in-alt me-2"></i>Giriş Yap
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link nav-auth-link" asp-controller="Account" asp-action="Register">
                                <i class="fas fa-user-plus me-2"></i>Kayıt Ol
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

        <main role="main" class="pb-3">
            @RenderBody()
        </main>

    <!-- MDB JavaScript -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.0/mdb.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        // Holographic background animation
        document.addEventListener('mousemove', function(e) {
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;
            
            document.documentElement.style.setProperty('--mouse-x', x);
            document.documentElement.style.setProperty('--mouse-y', y);
        });
    </script>
        @if (TempData["ToastMessage"] != null){
                <script type="text/javascript">

            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "positionClass": "toast-top-center",
                "timeOut": "10000"
            };
            toastr.@(TempData["ToastType"] ?? "success")('@TempData["ToastMessage"]');
        </script>
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)


    <script src="https://kit.fontawesome.com/d860dfcff7.js" crossorigin="anonymous"></script>

    <script>
        // Filtreleri uygula
        function applyFilters() {
            const filters = {
                metalType: document.getElementById('metalType').value,
                year: document.getElementById('year').value
            };

            // AJAX isteği ile filtreleri sunucuya gönder
            fetch('/PollutionEntry/ApplyFilters', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(filters)
            })
            .then(response => response.json())
            .then(data => {
                // Haritayı güncelle
                updateMap(data);
                // İstatistikleri güncelle
                updateStatistics(data);
            })
            .catch(error => {
                console.error('Error:', error);
                toastr.error('Filtreleme sırasında bir hata oluştu.');
            });
        }

        // Filtreleri sıfırla
        function resetFilters() {
            document.getElementById('metalType').value = '';
            document.getElementById('year').value = '';
            
            // Varsayılan verileri getir
            applyFilters();
            
            toastr.success('Filtreler sıfırlandı.');
        }

        // Haritayı güncelle
        function updateMap(data) {
            if (!data.success) {
                toastr.error(data.message);
                return;
            }

            // Mevcut işaretçileri temizle
            markers.forEach(marker => marker.remove());
            markers = [];

            // Yeni işaretçileri ekle
            data.data.forEach(point => {
                const marker = L.marker([point.latitude, point.longitude])
                    .bindPopup(`
                        <strong>${point.city}</strong><br>
                        Metal: ${point.metalType}<br>
                        Değer: ${point.pollutionValue}<br>
                        Seviye: ${point.pollutionLevel}<br>
                        Tarih: ${new Date(point.date).toLocaleDateString('tr-TR')}
                    `);
                
                markers.push(marker);
                marker.addTo(map);
            });

            // Haritayı tüm işaretçileri gösterecek şekilde ayarla
            if (markers.length > 0) {
                const group = new L.featureGroup(markers);
                map.fitBounds(group.getBounds().pad(0.1));
            }
        }

        // İstatistikleri güncelle
        function updateStatistics(data) {
            if (!data.success) return;

            const stats = data.statistics;
            
            // İstatistik HTML'ini oluştur
            const statsHtml = `
                <div class="statistics-container">
                    <h5 class="text-white mb-3">İstatistikler</h5>
                    <div class="stat-item">
                        <label>Ortalama Kirlilik:</label>
                        <span>${stats.averagePollution.toFixed(2)}</span>
                    </div>
                    <div class="stat-item">
                        <label>En Yüksek Değer:</label>
                        <span>${stats.maxPollution.toFixed(2)}</span>
                    </div>
                    <div class="stat-item">
                        <label>En Düşük Değer:</label>
                        <span>${stats.minPollution.toFixed(2)}</span>
                    </div>
                    <div class="stat-item">
                        <label>Toplam Kayıt:</label>
                        <span>${stats.totalEntries}</span>
                    </div>
                    <div class="pollution-levels">
                        <h6 class="text-white mt-3 mb-2">Kirlilik Seviyeleri</h6>
                        ${stats.pollutionLevels.map(level => `
                            <div class="level-item">
                                <label>${level.level}:</label>
                                <span>${level.count} kayıt</span>
                            </div>
                        `).join('')}
                    </div>
                </div>
            `;

            // İstatistikleri panele ekle
            document.querySelector('.filter-panel').insertAdjacentHTML('beforeend', statsHtml);
        }
    </script>
</body>
</html>
