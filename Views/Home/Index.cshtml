@{
    ViewData["Title"] = "Ana Sayfa";
}

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
<!-- MarkerCluster CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css" />

<style>
    #map {
        height: calc(100vh - 75px);
        width: 100%;
    }

    .popup-content {
        width: 250px;
    }

    .marker-cluster div {
        background-color: rgba(0, 0, 128, 0.3) !important;
    }

    .marker-cluster span {
        color: white;
    }
</style>

<div id="map"></div>

<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
<!-- MarkerCluster JS -->
<script src="https://unpkg.com/leaflet.markercluster@1.4.1/dist/leaflet.markercluster.js"></script>

<script>
    var map = L.map('map').setView([38.925533, 34.866287], 7);
    const mapUrl = "https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png"

    L.tileLayer(mapUrl, {
        maxZoom: 18,
        attribution: '&copy; <a href="https://www.opentopomap.org/">OpenTopoMap</a> contributors'
    }).addTo(map);

    var popupOpen = false;
    var currentPopup = null;
    
    // Haritadaki tüm markerları tutacak bir dizi oluşturalım
    var markers = [];

    function isPointInTurkey(lat, lng) {
        const turkeyBounds = [
            [36.0, 26.0],
            [42.1, 45.0]
        ];
        return lat >= turkeyBounds[0][0] && lat <= turkeyBounds[1][0] &&
            lng >= turkeyBounds[0][1] && lng <= turkeyBounds[1][1];
    }

    map.on('click', function (e) {
        if (popupOpen) {
            map.closePopup();
            popupOpen = false;
            currentPopup = null;
        } else if (isPointInTurkey(e.latlng.lat, e.latlng.lng)) {
            var latlng = e.latlng;
            showPopup(latlng);
        } else {
            alert('Sadece Türkiye sınırları içinde bir nokta seçebilirsiniz.');
        }
    });

    function showPopup(latlng) {
        window.location.href = `/PollutionEntry/Create?latitude=${latlng.lat.toFixed(6)}&longitude=${latlng.lng.toFixed(6)}`;
    }

    // Marker cluster group oluşturma
    var markerClusterGroup = L.markerClusterGroup({
        maxClusterRadius: 80,
        iconCreateFunction: function(cluster) {
            var childCount = cluster.getChildCount();
            var size = 40;
            return L.divIcon({
                html: '<div style="width: 40px; height: 40px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"><span>' + childCount + '</span></div>',
                className: 'marker-cluster',
                iconSize: new L.Point(size, size)
            });
        }
    });

    map.addLayer(markerClusterGroup);

    // Veritabanından verileri çekip marker'ları oluştur
    function loadPollutionData() {
        fetch('/Home/GetPollutionData')
            .then(response => response.json())
            .then(data => {
                data.forEach(item => {
                    var circleMarker = L.circleMarker([item.latitude, item.longitude], {
                        radius: 8,
                        fillColor: '#000080',  // Koyu mavi
                        color: '#000080',
                        weight: 1,
                        opacity: 1,
                        fillOpacity: 0.4
                    });

                    circleMarker.bindPopup(`
                        <div class="popup-content">
                            <h6>Ağır Metal Verisi</h6>
                            <p>Metal: ${item.metalType}</p>
                            <p>Değer: ${item.value.toFixed(6)} mg/L</p>
                            <p>Tarih: ${new Date(item.dataRecorded).toLocaleDateString('tr-TR')}</p>
                            <p>Koordinatlar: ${item.latitude.toFixed(6)}, ${item.longitude.toFixed(6)}</p>
                        </div>
                    `);

                    markerClusterGroup.addLayer(circleMarker);
                });
            });
    }

    // Sayfa yüklendiğinde verileri yükle
    loadPollutionData();
</script>